package math

import (
	"math/big"
)

func IntFromString(s string) *big.Int {
	res, success := new(big.Int).SetString(s, 0)
	if !success {
		panic("string parsing failed")
	}

	return res
}

var (
	One = big.NewInt(1)

	TwoPow31  = new(big.Int).Exp(big.NewInt(2), big.NewInt(31), nil)
	TwoPow32  = new(big.Int).Exp(big.NewInt(2), big.NewInt(32), nil)
	TwoPow64  = new(big.Int).Exp(big.NewInt(2), big.NewInt(64), nil)
	TwoPow96  = new(big.Int).Exp(big.NewInt(2), big.NewInt(96), nil)
	TwoPow127 = new(big.Int).Exp(big.NewInt(2), big.NewInt(127), nil)
	TwoPow128 = new(big.Int).Exp(big.NewInt(2), big.NewInt(128), nil)
	TwoPow256 = new(big.Int).Exp(big.NewInt(2), big.NewInt(256), nil)

	U32Max  = new(big.Int).Sub(TwoPow32, One)
	U96Max  = new(big.Int).Sub(TwoPow96, One)
	U128Max = new(big.Int).Sub(TwoPow128, One)
	U256Max = new(big.Int).Sub(TwoPow256, One)

	oneX128 = new(big.Int).Set(TwoPow128)

	tickMasks = [27]*big.Int{
		IntFromString("340282196779882608775400081051345954875"),
		IntFromString("340282026638911824551550055881712329744"),
		IntFromString("340281686357225467326082729798982530761"),
		IntFromString("340281005794873596573094710012989410072"),
		IntFromString("340279644674253220331048947518555486588"),
		IntFromString("340276922449345852680114346161748269428"),
		IntFromString("340271478064864046934932689706268169160"),
		IntFromString("340260589557227275536970734808027446368"),
		IntFromString("340238813587222069206590352882444122789"),
		IntFromString("340195265827972829906238800850533898084"),
		IntFromString("340108187030021964395011332102514443192"),
		IntFromString("339934096296338836553381438728885759063"),
		IntFromString("339586182118148867994722769619739863337"),
		IntFromString("338891421642114786711725022995822495130"),
		IntFromString("337506162020136007223375792700736547955"),
		IntFromString("334752606878476170032608184381010470119"),
		IntFromString("329312708224965356314372077522414179198"),
		IntFromString("318696677643769341895946499718036526719"),
		IntFromString("298480268784467865547185399201474874621"),
		IntFromString("261813363001402740542020888190605903085"),
		IntFromString("201439286044552466954512953679502885114"),
		IntFromString("119247395418425876229630149779831629514"),
		IntFromString("41788651709309085859755118322591422179"),
		IntFromString("5131889223303998677939799486543748348"),
		IntFromString("77395391476111124436543048938586576"),
		IntFromString("17603164912545197391926702422886"),
		IntFromString("910630244353091011850553"),
	}
)

const logBaseSqrtTickSize = 4.9999975000016666654166676666658333340476184226196031741031750577196410537756684185262518589393595459766211405607685305832e-7
