package msgpacktest

// Code generated by github.com/KyberNetwork/kyberswap-dex-lib/pkg/msgpack_test/generate DO NOT EDIT.

import (
	"testing"

	"github.com/KyberNetwork/kyberswap-dex-lib/pkg/msgpack/msgpack_test/utils"


	pkg_liquiditysource_balancerv1 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/balancer-v1"
	pkg_liquiditysource_balancerv2_composablestable "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/balancer-v2/composable-stable"
	pkg_liquiditysource_balancerv2_stable "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/balancer-v2/stable"
	pkg_liquiditysource_balancerv2_weighted "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/balancer-v2/weighted"
	pkg_liquiditysource_bancorv21 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/bancor-v21"
	pkg_liquiditysource_bancorv3 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/bancor-v3"
	pkg_liquiditysource_bedrock_unieth "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/bedrock/unieth"
	pkg_liquiditysource_curve_plain "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/curve/plain"
	pkg_liquiditysource_curve_stablemetang "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/curve/stable-meta-ng"
	pkg_liquiditysource_curve_stableng "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/curve/stable-ng"
	pkg_liquiditysource_curve_tricryptong "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/curve/tricrypto-ng"
	pkg_liquiditysource_dodo_classical "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/dodo/classical"
	pkg_liquiditysource_dodo_dpp "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/dodo/dpp"
	pkg_liquiditysource_dodo_dsp "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/dodo/dsp"
	pkg_liquiditysource_dodo_dvm "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/dodo/dvm"
	pkg_liquiditysource_etherfi_eeth "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/etherfi/eeth"
	pkg_liquiditysource_etherfi_weeth "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/etherfi/weeth"
	pkg_liquiditysource_gyroscope_2clp "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/gyroscope/2clp"
	pkg_liquiditysource_gyroscope_3clp "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/gyroscope/3clp"
	pkg_liquiditysource_gyroscope_eclp "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/gyroscope/eclp"
	pkg_liquiditysource_hashflowv3 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/hashflow-v3"
	pkg_liquiditysource_kelp_rseth "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/kelp/rseth"
	pkg_liquiditysource_nativev1 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/native-v1"
	pkg_liquiditysource_nomiswap_nomiswapstable "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/nomiswap/nomiswapstable"
	pkg_liquiditysource_puffer_pufeth "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/puffer/pufeth"
	pkg_liquiditysource_renzo_ezeth "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/renzo/ezeth"
	pkg_liquiditysource_rocketpool_reth "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/rocketpool/reth"
	pkg_liquiditysource_swaapv2 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/swaap-v2"
	pkg_liquiditysource_swell_rsweth "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/swell/rsweth"
	pkg_liquiditysource_swell_sweth "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/swell/sweth"
	pkg_liquiditysource_uniswapv2 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/uniswap-v2"
	pkg_liquiditysource_velocorev2_cpmm "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/velocore-v2/cpmm"
	pkg_liquiditysource_velocorev2_wombatstable "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/velocore-v2/wombat-stable"
	pkg_liquiditysource_velodromev1 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/velodrome-v1"
	pkg_liquiditysource_velodromev2 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/velodrome-v2"
	pkg_liquiditysource_woofiv2 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/liquidity-source/woofi-v2"
	pkg_source_algebrav1 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/algebrav1"
	pkg_source_balancer_stable "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/balancer/stable"
	pkg_source_balancer_weighted "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/balancer/weighted"
	pkg_source_balancercomposablestable "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/balancer-composable-stable"
	pkg_source_camelot "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/camelot"
	pkg_source_curve_aave "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/curve/aave"
	pkg_source_curve_base "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/curve/base"
	pkg_source_curve_compound "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/curve/compound"
	pkg_source_curve_meta "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/curve/meta"
	pkg_source_curve_plainoracle "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/curve/plain-oracle"
	pkg_source_curve_tricrypto "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/curve/tricrypto"
	pkg_source_curve_two "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/curve/two"
	pkg_source_dmm "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/dmm"
	pkg_source_dodo "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/dodo"
	pkg_source_elastic "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/elastic"
	pkg_source_equalizer "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/equalizer"
	pkg_source_fraxswap "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/fraxswap"
	pkg_source_fulcrom "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/fulcrom"
	pkg_source_fxdx "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/fxdx"
	pkg_source_gmx "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/gmx"
	pkg_source_gmxglp "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/gmx-glp"
	pkg_source_iziswap "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/iziswap"
	pkg_source_kokonutcrypto "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/kokonut-crypto"
	pkg_source_lido "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/lido"
	pkg_source_lidosteth "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/lido-steth"
	pkg_source_limitorder "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/limitorder"
	pkg_source_liquiditybookv20 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/liquiditybookv20"
	pkg_source_liquiditybookv21 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/liquiditybookv21"
	pkg_source_madmex "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/madmex"
	pkg_source_makerpsm "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/makerpsm"
	pkg_source_mantisswap "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/mantisswap"
	pkg_source_maverickv1 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/maverickv1"
	pkg_source_metavault "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/metavault"
	pkg_source_pancakev3 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/pancakev3"
	pkg_source_platypus "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/platypus"
	pkg_source_polmatic "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/pol-matic"
	pkg_source_quickperps "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/quickperps"
	pkg_source_ramsesv2 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/ramsesv2"
	pkg_source_saddle "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/saddle"
	pkg_source_slipstream "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/slipstream"
	pkg_source_smardex "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/smardex"
	pkg_source_solidlyv3 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/solidly-v3"
	pkg_source_swapbasedperp "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/swapbased-perp"
	pkg_source_syncswap_syncswapclassic "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/syncswap/syncswapclassic"
	pkg_source_syncswap_syncswapstable "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/syncswap/syncswapstable"
	pkg_source_synthetix "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/synthetix"
	pkg_source_uniswap "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/uniswap"
	pkg_source_uniswapv3 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/uniswapv3"
	pkg_source_usdfi "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/usdfi"
	pkg_source_velocimeter "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/velocimeter"
	pkg_source_velodrome "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/velodrome"
	pkg_source_velodromev2 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/velodromev2"
	pkg_source_vooi "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/vooi"
	pkg_source_wombat_wombatlsd "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/wombat/wombatlsd"
	pkg_source_wombat_wombatmain "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/wombat/wombatmain"
	pkg_source_woofiv2 "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/woofiv2"
	pkg_source_zkerafinance "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/zkera-finance"
)

func Test_liquiditysource_balancerv1(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_balancerv1.MsgpackTestPools())
}

func Test_liquiditysource_balancerv2_composablestable(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_balancerv2_composablestable.MsgpackTestPools())
}

func Test_liquiditysource_balancerv2_stable(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_balancerv2_stable.MsgpackTestPools())
}

func Test_liquiditysource_balancerv2_weighted(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_balancerv2_weighted.MsgpackTestPools())
}

func Test_liquiditysource_bancorv21(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_bancorv21.MsgpackTestPools())
}

func Test_liquiditysource_bancorv3(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_bancorv3.MsgpackTestPools())
}

func Test_liquiditysource_bedrock_unieth(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_bedrock_unieth.MsgpackTestPools())
}

func Test_liquiditysource_curve_plain(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_curve_plain.MsgpackTestPools())
}

func Test_liquiditysource_curve_stablemetang(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_curve_stablemetang.MsgpackTestPools())
}

func Test_liquiditysource_curve_stableng(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_curve_stableng.MsgpackTestPools())
}

func Test_liquiditysource_curve_tricryptong(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_curve_tricryptong.MsgpackTestPools())
}

func Test_liquiditysource_dodo_classical(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_dodo_classical.MsgpackTestPools())
}

func Test_liquiditysource_dodo_dpp(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_dodo_dpp.MsgpackTestPools())
}

func Test_liquiditysource_dodo_dsp(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_dodo_dsp.MsgpackTestPools())
}

func Test_liquiditysource_dodo_dvm(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_dodo_dvm.MsgpackTestPools())
}

func Test_liquiditysource_etherfi_eeth(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_etherfi_eeth.MsgpackTestPools())
}

func Test_liquiditysource_etherfi_weeth(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_etherfi_weeth.MsgpackTestPools())
}

func Test_liquiditysource_gyroscope_2clp(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_gyroscope_2clp.MsgpackTestPools())
}

func Test_liquiditysource_gyroscope_3clp(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_gyroscope_3clp.MsgpackTestPools())
}

func Test_liquiditysource_gyroscope_eclp(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_gyroscope_eclp.MsgpackTestPools())
}

func Test_liquiditysource_hashflowv3(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_hashflowv3.MsgpackTestPools())
}

func Test_liquiditysource_kelp_rseth(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_kelp_rseth.MsgpackTestPools())
}

func Test_liquiditysource_nativev1(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_nativev1.MsgpackTestPools())
}

func Test_liquiditysource_nomiswap_nomiswapstable(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_nomiswap_nomiswapstable.MsgpackTestPools())
}

func Test_liquiditysource_puffer_pufeth(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_puffer_pufeth.MsgpackTestPools())
}

func Test_liquiditysource_renzo_ezeth(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_renzo_ezeth.MsgpackTestPools())
}

func Test_liquiditysource_rocketpool_reth(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_rocketpool_reth.MsgpackTestPools())
}

func Test_liquiditysource_swaapv2(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_swaapv2.MsgpackTestPools())
}

func Test_liquiditysource_swell_rsweth(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_swell_rsweth.MsgpackTestPools())
}

func Test_liquiditysource_swell_sweth(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_swell_sweth.MsgpackTestPools())
}

func Test_liquiditysource_uniswapv2(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_uniswapv2.MsgpackTestPools())
}

func Test_liquiditysource_velocorev2_cpmm(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_velocorev2_cpmm.MsgpackTestPools())
}

func Test_liquiditysource_velocorev2_wombatstable(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_velocorev2_wombatstable.MsgpackTestPools())
}

func Test_liquiditysource_velodromev1(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_velodromev1.MsgpackTestPools())
}

func Test_liquiditysource_velodromev2(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_velodromev2.MsgpackTestPools())
}

func Test_liquiditysource_woofiv2(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_liquiditysource_woofiv2.MsgpackTestPools())
}

func Test_source_algebrav1(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_algebrav1.MsgpackTestPools())
}

func Test_source_balancer_stable(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_balancer_stable.MsgpackTestPools())
}

func Test_source_balancer_weighted(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_balancer_weighted.MsgpackTestPools())
}

func Test_source_balancercomposablestable(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_balancercomposablestable.MsgpackTestPools())
}

func Test_source_camelot(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_camelot.MsgpackTestPools())
}

func Test_source_curve_aave(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_curve_aave.MsgpackTestPools())
}

func Test_source_curve_base(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_curve_base.MsgpackTestPools())
}

func Test_source_curve_compound(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_curve_compound.MsgpackTestPools())
}

func Test_source_curve_meta(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_curve_meta.MsgpackTestPools())
}

func Test_source_curve_plainoracle(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_curve_plainoracle.MsgpackTestPools())
}

func Test_source_curve_tricrypto(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_curve_tricrypto.MsgpackTestPools())
}

func Test_source_curve_two(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_curve_two.MsgpackTestPools())
}

func Test_source_dmm(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_dmm.MsgpackTestPools())
}

func Test_source_dodo(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_dodo.MsgpackTestPools())
}

func Test_source_elastic(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_elastic.MsgpackTestPools())
}

func Test_source_equalizer(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_equalizer.MsgpackTestPools())
}

func Test_source_fraxswap(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_fraxswap.MsgpackTestPools())
}

func Test_source_fulcrom(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_fulcrom.MsgpackTestPools())
}

func Test_source_fxdx(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_fxdx.MsgpackTestPools())
}

func Test_source_gmx(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_gmx.MsgpackTestPools())
}

func Test_source_gmxglp(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_gmxglp.MsgpackTestPools())
}

func Test_source_iziswap(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_iziswap.MsgpackTestPools())
}

func Test_source_kokonutcrypto(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_kokonutcrypto.MsgpackTestPools())
}

func Test_source_lido(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_lido.MsgpackTestPools())
}

func Test_source_lidosteth(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_lidosteth.MsgpackTestPools())
}

func Test_source_limitorder(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_limitorder.MsgpackTestPools())
}

func Test_source_liquiditybookv20(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_liquiditybookv20.MsgpackTestPools())
}

func Test_source_liquiditybookv21(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_liquiditybookv21.MsgpackTestPools())
}

func Test_source_madmex(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_madmex.MsgpackTestPools())
}

func Test_source_makerpsm(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_makerpsm.MsgpackTestPools())
}

func Test_source_mantisswap(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_mantisswap.MsgpackTestPools())
}

func Test_source_maverickv1(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_maverickv1.MsgpackTestPools())
}

func Test_source_metavault(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_metavault.MsgpackTestPools())
}

func Test_source_pancakev3(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_pancakev3.MsgpackTestPools())
}

func Test_source_platypus(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_platypus.MsgpackTestPools())
}

func Test_source_polmatic(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_polmatic.MsgpackTestPools())
}

func Test_source_quickperps(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_quickperps.MsgpackTestPools())
}

func Test_source_ramsesv2(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_ramsesv2.MsgpackTestPools())
}

func Test_source_saddle(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_saddle.MsgpackTestPools())
}

func Test_source_slipstream(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_slipstream.MsgpackTestPools())
}

func Test_source_smardex(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_smardex.MsgpackTestPools())
}

func Test_source_solidlyv3(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_solidlyv3.MsgpackTestPools())
}

func Test_source_swapbasedperp(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_swapbasedperp.MsgpackTestPools())
}

func Test_source_syncswap_syncswapclassic(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_syncswap_syncswapclassic.MsgpackTestPools())
}

func Test_source_syncswap_syncswapstable(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_syncswap_syncswapstable.MsgpackTestPools())
}

func Test_source_synthetix(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_synthetix.MsgpackTestPools())
}

func Test_source_uniswap(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_uniswap.MsgpackTestPools())
}

func Test_source_uniswapv3(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_uniswapv3.MsgpackTestPools())
}

func Test_source_usdfi(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_usdfi.MsgpackTestPools())
}

func Test_source_velocimeter(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_velocimeter.MsgpackTestPools())
}

func Test_source_velodrome(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_velodrome.MsgpackTestPools())
}

func Test_source_velodromev2(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_velodromev2.MsgpackTestPools())
}

func Test_source_vooi(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_vooi.MsgpackTestPools())
}

func Test_source_wombat_wombatlsd(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_wombat_wombatlsd.MsgpackTestPools())
}

func Test_source_wombat_wombatmain(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_wombat_wombatmain.MsgpackTestPools())
}

func Test_source_woofiv2(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_woofiv2.MsgpackTestPools())
}

func Test_source_zkerafinance(t *testing.T) {
	utils.TestMarshalUnmarshal(t, pkg_source_zkerafinance.MsgpackTestPools())
}
