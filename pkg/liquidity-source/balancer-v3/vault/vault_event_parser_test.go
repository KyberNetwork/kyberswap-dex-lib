package vault

import (
	"context"
	"testing"

	"github.com/ethereum/go-ethereum/core/types"
	"github.com/goccy/go-json"
	"github.com/stretchr/testify/assert"
)

func TestDecode(t *testing.T) {
	t.Parallel()
	t.Run("1. Decode pool address from logs", func(t *testing.T) {
		// eth_getLogs(0x6bfddaa39cfba203836ca9693a2f12cf6cef7f7c9cbf32375e39b0773b89f718)
		jsonStr := `[{"address":"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x0000000000000000000000004585fe77225b41b697c938b018e2ac67ac5a20c0","0x00000000000000000000000081463b0f960f247f704377661ec81c1fd65b5128"],"data":"0x00000000000000000000000000000000000000000000000000000000000e4dd1","blockNumber":"0x1533241","transactionHash":"0x6bfddaa39cfba203836ca9693a2f12cf6cef7f7c9cbf32375e39b0773b89f718","transactionIndex":"0x2b","blockHash":"0x02044ebe0ee971c910a771e14d4d0c4daeb34a78169aafdae77f2c2c221c7ebd","logIndex":"0xd8","removed":false},{"address":"0xba1333333333a1ba1108e8412f11850a5c319ba9","topics":["0x0874b2d545cb271cdbda4e093020c452328b24af12382ed62c4d00f5c26709db","0x0000000000000000000000006b49054c350b47ca9aa1331ab156a1eedbe94e79","0x0000000000000000000000002260fac5e5542a773aa44fbcfedf7c193bc2c599","0x000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"],"data":"0x00000000000000000000000000000000000000000000000000000000000e4dd100000000000000000000000000000000000000000000000006d6bdff66ef988000000000000000000000000000000000000000000000000000038d7ea4c6800000000000000000000000000000000000000000000000000000000000000003a9","blockNumber":"0x1533241","transactionHash":"0x6bfddaa39cfba203836ca9693a2f12cf6cef7f7c9cbf32375e39b0773b89f718","transactionIndex":"0x2b","blockHash":"0x02044ebe0ee971c910a771e14d4d0c4daeb34a78169aafdae77f2c2c221c7ebd","logIndex":"0xd9","removed":false},{"address":"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x00000000000000000000000081463b0f960f247f704377661ec81c1fd65b5128","0x000000000000000000000000ba1333333333a1ba1108e8412f11850a5c319ba9"],"data":"0x00000000000000000000000000000000000000000000000000000000000e4dd1","blockNumber":"0x1533241","transactionHash":"0x6bfddaa39cfba203836ca9693a2f12cf6cef7f7c9cbf32375e39b0773b89f718","transactionIndex":"0x2b","blockHash":"0x02044ebe0ee971c910a771e14d4d0c4daeb34a78169aafdae77f2c2c221c7ebd","logIndex":"0xda","removed":false},{"address":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x000000000000000000000000ba1333333333a1ba1108e8412f11850a5c319ba9","0x00000000000000000000000081463b0f960f247f704377661ec81c1fd65b5128"],"data":"0x00000000000000000000000000000000000000000000000006d6bdff66ef9880","blockNumber":"0x1533241","transactionHash":"0x6bfddaa39cfba203836ca9693a2f12cf6cef7f7c9cbf32375e39b0773b89f718","transactionIndex":"0x2b","blockHash":"0x02044ebe0ee971c910a771e14d4d0c4daeb34a78169aafdae77f2c2c221c7ebd","logIndex":"0xdb","removed":false},{"address":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x00000000000000000000000081463b0f960f247f704377661ec81c1fd65b5128","0x0000000000000000000000004585fe77225b41b697c938b018e2ac67ac5a20c0"],"data":"0x00000000000000000000000000000000000000000000000006d3ef1cb2fa627a","blockNumber":"0x1533241","transactionHash":"0x6bfddaa39cfba203836ca9693a2f12cf6cef7f7c9cbf32375e39b0773b89f718","transactionIndex":"0x2b","blockHash":"0x02044ebe0ee971c910a771e14d4d0c4daeb34a78169aafdae77f2c2c221c7ebd","logIndex":"0xdc","removed":false},{"address":"0x4585fe77225b41b697c938b018e2ac67ac5a20c0","topics":["0xc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67","0x00000000000000000000000081463b0f960f247f704377661ec81c1fd65b5128","0x00000000000000000000000081463b0f960f247f704377661ec81c1fd65b5128"],"data":"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1b22f00000000000000000000000000000000000000000000000006d3ef1cb2fa627a00000000000000000000000000000000000b0d41f9734feba2ff66a20ebcbc0d000000000000000000000000000000000000000000000000004ba24b03a225890000000000000000000000000000000000000000000000000000000000041e30","blockNumber":"0x1533241","transactionHash":"0x6bfddaa39cfba203836ca9693a2f12cf6cef7f7c9cbf32375e39b0773b89f718","transactionIndex":"0x2b","blockHash":"0x02044ebe0ee971c910a771e14d4d0c4daeb34a78169aafdae77f2c2c221c7ebd","logIndex":"0xdd","removed":false}]`
		var logs []types.Log
		_ = json.Unmarshal([]byte(jsonStr), &logs)
		poolDecoder := NewEventParser(&Config{
			Vault: "0xbA1333333333a1BA1108E8412f11850A5C319bA9",
		})
		addressLogs, _ := poolDecoder.Decode(context.Background(), logs)
		assert.Equal(t, int(addressLogs["0x6b49054c350b47ca9aa1331ab156a1eedbe94e79"][0].Index), 217)
	})
}
