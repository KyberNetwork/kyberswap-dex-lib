package valueobject

import (
	"testing"

	l1executor "github.com/KyberNetwork/aggregator-encoding/pkg/encode/l1encode/executor"
	"github.com/KyberNetwork/kyberswap-dex-lib/pkg/valueobject"
	"github.com/stretchr/testify/assert"
)

func TestMustCheckApproveMaxFlagExchange(t *testing.T) {
	approveMaxExchanges := []Exchange{
		valueobject.ExchangeKyberSwapLimitOrder,

		valueobject.ExchangeOneSwap,
		valueobject.ExchangeNerve,
		valueobject.ExchangeIronStable,
		valueobject.ExchangeSynapse,
		valueobject.ExchangeSaddle,
		valueobject.ExchangeAxial,
		valueobject.ExchangeAlienBaseStableSwap,
		valueobject.ExchangeCurve,
		valueobject.ExchangeEllipsis,
		valueobject.ExchangeCurveStablePlain,
		valueobject.ExchangeCurveStableNg,
		valueobject.ExchangeCurveStableMetaNg,
		valueobject.ExchangeCurveTriCryptoNg,
		valueobject.ExchangeCurveTwoCryptoNg,
		valueobject.ExchangePancakeStable,
		valueobject.ExchangeZkSwapStable,
		valueobject.ExchangeBalancerV2Weighted,
		valueobject.ExchangeBalancerV2Stable,
		valueobject.ExchangeBalancerV2ComposableStable,
		valueobject.ExchangeBeethovenXWeighted,
		valueobject.ExchangeBeethovenXStable,
		valueobject.ExchangeBeethovenXComposableStable,
		valueobject.ExchangeGyroscope2CLP,
		valueobject.ExchangeGyroscope3CLP,
		valueobject.ExchangeGyroscopeECLP,
		valueobject.ExchangeBeraSwapWeighted,
		valueobject.ExchangeBeraSwapStable,
		valueobject.ExchangeBeraSwapComposableStable,
		valueobject.ExchangeBurrBearWeighted,
		valueobject.ExchangeBurrBearStable,
		valueobject.ExchangeBurrBearComposableStable,
		valueobject.ExchangeDodo,
		valueobject.ExchangeDodoClassical,
		valueobject.ExchangeDodoPrivatePool,
		valueobject.ExchangeDodoStablePool,
		valueobject.ExchangeDodoVendingMachine,
		valueobject.ExchangeMakerLido,
		valueobject.ExchangePlatypus,
		valueobject.ExchangeMakerPSM,

		valueobject.ExchangeMantisSwap,
		valueobject.ExchangeWombat,
		valueobject.ExchangeKyberPMM,
		valueobject.ExchangeBancorV3,
		valueobject.ExchangeAmbient,

		valueobject.ExchangeVooi,
		valueobject.ExchangeVelocoreV2CPMM,
		valueobject.ExchangePolMatic,
		valueobject.ExchangeSmardex,
		valueobject.ExchangeKokonutCrypto,
		valueobject.ExchangeBalancerV1,
		valueobject.ExchangeDexalot,
		valueobject.ExchangeBancorV21,

		valueobject.ExchangeNativeV1,
		valueobject.ExchangeNativeV2,
		valueobject.ExchangePmm2,
		valueobject.ExchangeUniSwapV1,
		valueobject.ExchangeEtherfiWEETH,
		valueobject.ExchangeKelpRSETH,
		valueobject.ExchangeEthenaSusde,
		valueobject.ExchangeBebop,
		valueobject.ExchangeRocketPoolRETH,
		valueobject.ExchangeMakerSavingsDai,
		valueobject.ExchangeEtherfiVampire,

		valueobject.ExchangeRenzoEZETH,
		valueobject.ExchangeWBETH,
		valueobject.ExchangeSfrxETHConvertor,
		valueobject.ExchangeHashflowV3,
		valueobject.ExchangePufferPufETH,
		valueobject.ExchangeIntegral,
		valueobject.ExchangeUsd0PP,

		valueobject.ExchangeEtherVista,
		valueobject.ExchangeFluidVaultT1,
		valueobject.ExchangeLitePSM,
		valueobject.ExchangeMkrSky,
		valueobject.ExchangeDaiUsds,
		valueobject.ExchangeLO1inch,
		valueobject.ExchangePmm1,
		valueobject.ExchangeFluidDexT1,
		valueobject.ExchangeOndoUSDY,
		valueobject.ExchangeRingSwap,

		valueobject.ExchangeKyberSwapLimitOrderDS,
		valueobject.ExchangeEtherFieBTC,

		valueobject.ExchangeSavingsUSDS,
		valueobject.ExchangeHoney,
		valueobject.ExchangeOvernightUsdp,
		valueobject.ExchangeSwaapV2,
		valueobject.ExchangePandaFun,
		valueobject.ExchangeCurveLlamma,
		valueobject.ExchangeCurveLending,
		valueobject.ExchangeHyeth,

		valueobject.ExchangeBeefySonic,
		valueobject.ExchangeNativeV3,
		valueobject.ExchangeBakerySwap,
		valueobject.ExchangeBabyDogeSwap,
	}
	for _, exchange := range approveMaxExchanges {
		t.Run(string(exchange), func(t *testing.T) {
			isApproveMaxExchange, _ := IsApproveMaxExchange(exchange)
			assert.Equalf(t, true, isApproveMaxExchange,
				"IsApproveMaxExchange(%v)", exchange)
		})
	}

	exchanges := []Exchange{
		valueobject.ExchangeSushiSwap,
		valueobject.ExchangeTrisolaris,
		valueobject.ExchangeWannaSwap,
		valueobject.ExchangeNearPad,
		valueobject.ExchangePangolin,
		valueobject.ExchangeTraderJoe,
		valueobject.ExchangeLydia,
		valueobject.ExchangeYetiSwap,
		valueobject.ExchangeApeSwap,
		valueobject.ExchangeJetSwap,
		valueobject.ExchangeMDex,
		valueobject.ExchangePancake,
		valueobject.ExchangeWault,
		valueobject.ExchangePancakeLegacy,
		valueobject.ExchangeBiSwap,
		valueobject.ExchangePantherSwap,
		valueobject.ExchangeVVS,
		valueobject.ExchangeCronaSwap,
		valueobject.ExchangeCrodex,
		valueobject.ExchangeMMF,
		valueobject.ExchangeEmpireDex,
		valueobject.ExchangePhotonSwap,
		valueobject.ExchangeUniSwap,
		valueobject.ExchangeShibaSwap,
		valueobject.ExchangeDefiSwap,
		valueobject.ExchangeSpookySwap,
		valueobject.ExchangeSpiritSwap,
		valueobject.ExchangePaintSwap,
		valueobject.ExchangeMorpheus,
		valueobject.ExchangeValleySwap,
		valueobject.ExchangeYuzuSwap,
		valueobject.ExchangeGemKeeper,
		valueobject.ExchangeLizard,
		valueobject.ExchangeValleySwapV2,
		valueobject.ExchangeZipSwap,
		valueobject.ExchangeQuickSwap,
		valueobject.ExchangeSynthSwap,
		valueobject.ExchangePolycat,
		valueobject.ExchangeDFYN,
		valueobject.ExchangePolyDex,
		valueobject.ExchangeGravity,
		valueobject.ExchangeCometh,
		valueobject.ExchangeDinoSwap,
		valueobject.ExchangeKrptoDex,
		valueobject.ExchangeSafeSwap,
		valueobject.ExchangeSwapr,
		valueobject.ExchangeWagyuSwap,
		valueobject.ExchangeAstroSwap,
		valueobject.ExchangeVerse,
		valueobject.ExchangeEchoDex,
		valueobject.ExchangeBaseSwap,
		valueobject.ExchangeAlienBase,
		valueobject.ExchangeSwapBased,
		valueobject.ExchangeRocketSwapV2,
		valueobject.ExchangeSpartaDex,
		valueobject.ExchangeArbiDex,
		valueobject.ExchangeSpacefi,
		valueobject.ExchangeCrowdswapV2,
		valueobject.ExchangeDackieV2,
		valueobject.ExchangeMoonBase,
		valueobject.ExchangeBalDex,
		valueobject.ExchangeZkSwapFinance,
		valueobject.ExchangeScrollSwap,
		valueobject.ExchangePunkSwap,
		valueobject.ExchangeMetavaultV2,
		valueobject.ExchangeNomiswap,
		valueobject.ExchangeArbswapAMM,
		valueobject.ExchangeKokonutCpmm,
		valueobject.ExchangeZebra,
		valueobject.ExchangeZKSwap,
		valueobject.ExchangeMerchantMoe,
		valueobject.ExchangeFusionX,
		valueobject.ExchangeSquadSwap,
		valueobject.ExchangeSquadSwapV2,
		valueobject.ExchangeLiquidusFinance,
		valueobject.ExchangeStationDexV2,
		valueobject.ExchangeAbstra,
		valueobject.ExchangeRevoSwap,
		valueobject.ExchangePotatoSwap,
		valueobject.ExchangeDyorSwap,
		valueobject.ExchangeLineHubV2,
		valueobject.ExchangeWigoSwap,
		valueobject.ExchangeSectaV2,
		valueobject.ExchangeSonicMarket,
		valueobject.ExchangeSboom,
		valueobject.ExchangeMetropolis,
		valueobject.ExchangeDeltaSwapV1,
		valueobject.ExchangeKodiakV2,
		valueobject.ExchangeBeracaine,
		valueobject.ExchangeMemeswap,
		valueobject.ExchangeDeFive,
		valueobject.ExchangeKatanaV2,
		valueobject.ExchangeUcsFinance,
		valueobject.ExchangeArenaDex,
		valueobject.ExchangeArenaDexV2,
		valueobject.ExchangeBabySwap,
		valueobject.ExchangeDinosaurEggs,
		valueobject.ExchangeFstsSwap,
		valueobject.ExchangeDMM,
		valueobject.ExchangeKyberSwap,
		valueobject.ExchangeKyberSwapStatic,
		valueobject.ExchangeVelodrome,
		valueobject.ExchangeDystopia,
		valueobject.ExchangeChronos,
		valueobject.ExchangeRamses,
		valueobject.ExchangeVelocore,
		valueobject.ExchangeRetro,
		valueobject.ExchangeThena,
		valueobject.ExchangePearl,
		valueobject.ExchangePearlV2,
		valueobject.ExchangeFvm,
		valueobject.ExchangeBvm,
		valueobject.ExchangeBaso,
		valueobject.ExchangeVelodromeV2,
		valueobject.ExchangeAerodrome,
		valueobject.ExchangeLyve,
		valueobject.ExchangeVesync,
		valueobject.ExchangeScale,
		valueobject.ExchangeUSDFi,
		valueobject.ExchangeSkydrome,
		valueobject.ExchangeNile,
		valueobject.ExchangePharaoh,
		valueobject.ExchangeNuri,
		valueobject.ExchangeEqual,
		valueobject.ExchangeCleopatra,
		valueobject.ExchangeStratumFinance,
		valueobject.ExchangeMVM,
		valueobject.ExchangeLynexV1,
		valueobject.ExchangeSkydromeV2,
		valueobject.ExchangeKellerFinance,
		valueobject.ExchangeDegenExpress,
		valueobject.ExchangeTokan,
		valueobject.ExchangeSwapXV2,
		valueobject.ExchangeFraxSwap,
		valueobject.ExchangeCamelot,
		valueobject.ExchangeEzkalibur,
		valueobject.ExchangeMaverickV1,
		valueobject.ExchangeMuteSwitch,
		valueobject.ExchangeIZiSwap,

		valueobject.ExchangeUniSwapV3,
		valueobject.ExchangeKyberswapElastic,
		valueobject.ExchangePancakeV3,
		valueobject.ExchangeChronosV3,
		valueobject.ExchangeRetroV3,
		valueobject.ExchangeHorizonDex,
		valueobject.ExchangeDoveSwapV3,
		valueobject.ExchangeSushiSwapV3,
		valueobject.ExchangeRamsesV2,
		valueobject.ExchangeEchoDexV3,
		valueobject.ExchangeDackieV3,
		valueobject.ExchangeZkSwapV3,
		valueobject.ExchangeHoriza,
		valueobject.ExchangeBaseSwapV3,
		valueobject.ExchangeArbiDexV3,
		valueobject.ExchangeWagmi,
		valueobject.ExchangeMMFV3,
		valueobject.ExchangeMetavaultV3,
		valueobject.ExchangeSolidlyV3,
		valueobject.ExchangeZero,
		valueobject.ExchangeZebraV2,
		valueobject.ExchangeNileV2,
		valueobject.ExchangeBlueprint,
		valueobject.ExchangePharaohV2,
		valueobject.ExchangeNuriV2,
		valueobject.ExchangeEqualizerCL,
		valueobject.ExchangeAgniFinance,
		valueobject.ExchangeFusionXV3,
		valueobject.ExchangeCleopatraV2,
		valueobject.ExchangeButterFi,
		valueobject.ExchangeXLayerSwap,
		valueobject.ExchangeStationDexV3,
		valueobject.ExchangeLineHubV3,
		valueobject.ExchangeSpookySwapV3,
		valueobject.ExchangeKoiCL,
		valueobject.ExchangeSyncSwapCL,
		valueobject.ExchangeSectaV3,
		valueobject.ExchangeQuickSwapUniV3,
		valueobject.ExchangeHoldFun,
		valueobject.ExchangeVelodromeCL,
		valueobject.ExchangeAerodromeCL,
		valueobject.ExchangeVelodromeCL2,
		valueobject.ExchangeThick,
		valueobject.ExchangeShadowDex,
		valueobject.ExchangeKodiakV3,
		valueobject.ExchangeSquadSwapV3,
		valueobject.ExchangeOwlSwapV3,
		valueobject.ExchangeUnchainX,
		valueobject.ExchangeGMX,
		valueobject.ExchangeMadMex,
		valueobject.ExchangeMetavault,
		valueobject.ExchangeBMX,
		valueobject.ExchangeSynthSwapPerp,
		valueobject.ExchangeSwapBasedPerp,
		valueobject.ExchangeFxdx,
		valueobject.ExchangeQuickPerps,
		valueobject.ExchangeMummyFinance,
		valueobject.ExchangeOpx,
		valueobject.ExchangeFulcrom,
		valueobject.ExchangeVodoo,
		valueobject.ExchangeZkEraFinance,
		valueobject.ExchangeTsunamiX,
		valueobject.ExchangeNavigator,
		valueobject.ExchangeAmped,
		valueobject.ExchangeSynthetix,
		valueobject.ExchangeMakerLidoStETH,
		valueobject.ExchangeSyncSwap,
		valueobject.ExchangeQuickSwapV3,
		valueobject.ExchangeSynthSwapV3,
		valueobject.ExchangeSwapBasedV3,
		valueobject.ExchangeLynex,
		valueobject.ExchangeCamelotV3,
		valueobject.ExchangeZyberSwapV3,
		valueobject.ExchangeThenaFusion,
		valueobject.ExchangeHorizonIntegral,
		valueobject.ExchangeSilverSwap,
		valueobject.ExchangeScribe,
		valueobject.ExchangeFenix,
		valueobject.ExchangeSwapsicle,
		valueobject.ExchangeBlade,
		valueobject.ExchangeSwapXCL,
		valueobject.ExchangeThenaFusionV3,
		valueobject.ExchangeBulla,
		valueobject.ExchangeWasabi,
		valueobject.ExchangeTraderJoeV20,
		valueobject.ExchangeTraderJoeV21,
		valueobject.ExchangeTraderJoeV22,
		valueobject.ExchangeMerchantMoeV22,
		valueobject.ExchangeE3,
		valueobject.ExchangeMetropolisLB,
		valueobject.ExchangeNomiswapStable,

		valueobject.ExchangeWooFiV2,
		valueobject.ExchangeWooFiV3,
		valueobject.ExchangeEtherfiEETH,
		valueobject.ExchangeSyncSwapV2Classic,
		valueobject.ExchangeSyncSwapV2Stable,
		valueobject.ExchangeSyncSwapV2Aqua,

		valueobject.ExchangeMantleETH,
		valueobject.ExchangeFrxETH,
		valueobject.ExchangeSfrxETH,
		valueobject.ExchangeSwellSWETH,
		valueobject.ExchangeSwellRSWETH,
		valueobject.ExchangeStaderETHx,
		valueobject.ExchangeOETH,
		valueobject.ExchangePrimeETH,
		valueobject.ExchangeBedrockUniETH,
		valueobject.ExchangeMaverickV2,
		valueobject.ExchangeClipper,

		valueobject.ExchangeBeetsSS,
		valueobject.ExchangeClipper,
		valueobject.ExchangeClipper,
		valueobject.ExchangeBalancerV3Weighted,
		valueobject.ExchangeBalancerV3Stable,
		valueobject.ExchangeBalancerV3ECLP,
		valueobject.ExchangeBeethovenXV3Weighted,
		valueobject.ExchangeBeethovenXV3Stable,
		valueobject.ExchangeSolidlyV2,
		valueobject.ExchangeShadowLegacy,
		valueobject.ExchangeMemeBox,
		valueobject.ExchangeFakePool,

		valueobject.ExchangeKatanaV3,
		valueobject.ExchangeEulerSwap,
		valueobject.ExchangeUniswapV4,
		valueobject.ExchangeUniswapV4BunniV2,
		valueobject.ExchangeUniswapV4FairFlow,
		valueobject.ExchangeUniswapV4Kem,
		valueobject.ExchangeEkubo,
		valueobject.ExchangePancakeInfinityCL,
		valueobject.ExchangePancakeInfinityBin,
	}
	for _, exchange := range exchanges {
		t.Run(string(exchange), func(t *testing.T) {
			isApproveMaxExchange, _ := IsApproveMaxExchange(exchange)
			assert.Equalf(t, false, isApproveMaxExchange,
				"IsApproveMaxExchange(%v)", exchange)
		})
	}

	expectedTotalExchanges := l1executor.GetL1ExchangesCount()
	if totalExchanges := len(approveMaxExchanges) + len(exchanges); totalExchanges != expectedTotalExchanges {
		t.Logf("total exchanges should be %d but got %d", expectedTotalExchanges, totalExchanges)
	}
}
