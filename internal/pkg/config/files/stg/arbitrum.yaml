env: "staging"
pprof: false
http:
  bindAddress: ":8080"
  mode: debug #(debug,release,test)
  prefix: /arbitrum
grpc:
  host: 0.0.0.0
  port: 10443
common:
  chainId: &chainId 42161
  chainName: &chainName arbitrum
  rpc: "https://arbitrum.kyberengineering.io"
  multicallAddress: "0xcA11bde05977b3631167028862bE2a173976CA11"
  executorAddress: &executorAddress "0xf081470f5C6FBCCF48cC4e5B82Dd926409DcdD67"
  routerAddress: &routerAddress "0x6131B5fae19EA4f9D964eAc0408E4408b66337b5"
  gasTokenAddress: &gasTokenAddress "0x82af49447d8a07e3bd95bd0d56f35241523fbab1"
  whitelistedTokenSet: &whitelistedTokenSet
    0x4cfa50b7ce747e2d61724fcac57f24b748ff2b2a: true # FUSDC
    0x1622bf67e6e5747b81866fe0b85178a93c7f86e3: true # UMAMI
    0x912ce59144191c1204e64559fe8253a0e49e6548: true # ARB
    0xfa5ed56a203466cbbc2430a43c66b9d8723528e7: true # agEUR
    0x82af49447d8a07e3bd95bd0d56f35241523fbab1: true # WETH
    0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9: true # USDT
    0xda10009cbd5d07dd0cecc66161fc93d7c9000da1: true # DAI
    0xff970a61a04b1ca14834a43f5de4533ebddb5cc8: true # USDC
    0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f: true # WBTC
    0xfea7a6a0b346362bf88a9e4a88416b77a57d6c2a: true # MIM
    0x5979d7b546e38e414f7e9822514be443a4800529: true # WSTETH
    0xe4dddfe67e7164b0fe14e218d80dc4c08edc01cb: true # KNC
    0x3f56e0c36d275367b8c502090edf38289b3dea0d: true # MAI
    0x316772cfec9a3e976fde42c3ba21f5a13aaaff12: true # mKNC
    0x13ad51ed4f1b7e9dc168d8a00cb3f4ddd85efa60: true # LDO
    0xf97f4df75117a78c1a5a0dbb814af92458539fb4: true # LINK
  blacklistedPoolSet: &blacklistedPoolSet
    0x7b07164ecfaf0f0d85dfc062bc205a4674c75aa0: true
    0x1506b54a1c0ea1b2f4a84866ec5776f7f6e7f0b1: true
  availableSources: &availableSources
    - "kyberswap"
    - "kyberswap-static"
    - "kyberswap-elastic"
    - "uniswapv3"
    - "sushiswap"
    - "curve"
    - "swapr"
    - "synapse"
    - "saddle"
    - "dodo"
    - "gmx"
    - "fraxswap"
    - "camelot"
    - "kyberswap-limit-order"
    - "kyberswap-limit-order-v2"
    - "chronos"
    - "ramses"
    - "chronos-v3"
    - "pancake"
    - "pancake-v3"
    - "sushiswap-v3"
    - "ramses-v2"
    - "sparta-dex"
    - "arbi-dex"
    - "wombat"
    - "iziswap"
    - "camelot-v3"
    - "zyberswap-v3"
    - "horiza"
    - "woofi-v2"
    - "crowdswap-v2"
    - "arbidex-v3"
    - "mmf"
    - "mmf-v3"
    - "arbswap-amm"
    - "traderjoe-v21"
    - "traderjoe-v20"
    - "smardex"
    - "mummy-finance"
    - "balancer-v2-weighted"
    - "balancer-v2-stable"
    - "balancer-v2-composable-stable"
  featureFlags: &featureFlags
log:
  sentryDSN: "https://6cd398671bde455f8fadad6dbfe87a67@sentry-v2.knstats.com/48"
  consoleLevel: info
  enableConsole: true
  enableJSONFormat: true
redis:
  addresses:
  masterName: ""
  dbNumber: 0
  password: ""
  prefix: *chainName
  readTimeout: 3s
  writeTimeout: 3s
  readOnly: false
  routeRandomly: false
pregenRedis:
  addresses:
  masterName: ""
  dbNumber: 0
  password: ""
  prefix: *chainName
  readTimeout: 3s
  writeTimeout: 3s
  readOnly: false
  routeRandomly: false
poolRedis:
  addresses:
  masterName: ""
  dbNumber: 0
  password: ""
  prefix: *chainName
  readTimeout: 3s
  writeTimeout: 3s
  readOnly: false
  routeRandomly: false
ddAgentHost: ""
featureFlags:
  useOptimizedSPFA: false
keyPair:
  storageFilePath: ""
  keyIDForSealingData:
    clientData: "1"
reloadConfig:
  httpUrl: ""
  interval: 10s
  serviceName: "aggregator"
  chainID: *chainId
secretKey:
metrics:
  host:
  port: 8125
  namespace: "kybernetwork."
encoder:
  chainId: *chainId
  executorAddress: *executorAddress
  routerAddress: *routerAddress
  l2ExecutorAddress: "0x11ddD59C33c73C44733b4123a86Ea5ce57F6e854"
  isPositiveSlippageEnabled: true
  minimumPSThreshold: 1000000
  executorAddressByClientID:
    unibot-tg: 0x1BC5cF80f308518f000dDE4c8f8139268aA014DB
  functionSelectorMappingID: # This map can be updated when we change l2 executor address
    executeUniSwap: 0
    executeKyberClassic: 1
    executeVelodromeSwap: 2
    executeFraxSwap: 3
    executeCamelotSwap: 4
    executeKyberLimitOrder: 5
    executeRfqSwap: 6
    executeHashflowSwap: 7
    executeStableSwap: 8
    executeCurveSwap: 9
    executeUniV3KSElastic: 10
    executeBalV2Swap: 11
    executeDODOSwap: 12
    executeGMXSwap: 13
    executeSynthetixSwap: 14
    executeMaverick: 19
    executeAlgebraV1: 21
    executeWombat: 24
    executeWooFiV2: 25
    executeIziSwap: 26
    executeTraderJoeV2: 27
    executeKyberDSLO: 28
    executeSmardex: 34
useCase:
  getRoute:
    chainId: *chainId
    gasTokenAddress: *gasTokenAddress
    routerAddress: *routerAddress
    availableSources: *availableSources
    aggregator:
      whitelistedTokenSet: *whitelistedTokenSet
      getBestPoolsOptions:
        directPoolsCount: 100
        whitelistPoolsCount: 500
        tokenInPoolsCount: 200
        tokenOutPoolCount: 200
        amplifiedTvlDirectPoolsCount: 50
        amplifiedTvlWhitelistPoolsCount: 200
        amplifiedTvlTokenInPoolsCount: 100
        amplifiedTvlTokenOutPoolCount: 100
      finderOptions:
        maxHops: 3
        distributionPercent: 5
        maxPathsInRoute: 20
        maxPathsToGenerate: 5
        maxPathsToReturn: 200
        minPartUSD: 500
        minThresholdAmountInUSD: 0
        maxThresholdAmountInUSD: 100000000
        isHillClimbEnabled: false
        hillClimbDistributionPercent: 1
        hillClimbIteration: 2
        hillClimbMinPartUSD: 500
        isPathGeneratorEnabled: false
    cache:
      defaultTtl: 15s
      ttlByAmount:
        - amount: 1
          ttl: 30s
        - amount: 2
          ttl: 10s
        - amount: 5
          ttl: 10s
        - amount: 10
          ttl: 10s
        - amount: 11
          ttl: 30s
        - amount: 15
          ttl: 10s
        - amount: 20
          ttl: 10s
        - amount: 22
          ttl: 30s
        - amount: 25
          ttl: 10s
        - amount: 30
          ttl: 10s
        - amount: 33
          ttl: 30s
        - amount: 35
          ttl: 10s
        - amount: 40
          ttl: 10s
        - amount: 44
          ttl: 30s
        - amount: 45
          ttl: 10s
        - amount: 50
          ttl: 10s
        - amount: 55
          ttl: 30s
        - amount: 60
          ttl: 10s
        - amount: 66
          ttl: 30s
        - amount: 70
          ttl: 10s
        - amount: 77
          ttl: 30s
        - amount: 80
          ttl: 10s
        - amount: 88
          ttl: 30s
        - amount: 90
          ttl: 10s
        - amount: 99
          ttl: 30s
        - amount: 100
          ttl: 10s
        - amount: 500
          ttl: 10s
        - amount: 1000
          ttl: 10s
        - amount: 10000
          ttl: 10s
        - amount: 100000
          ttl: 10s
      ttlByAmountUsdRange:
        - amountUSDLowerBound: 0
          ttl: 10s
        - amountUSDLowerBound: 101
          ttl: 10s
        - amountUSDLowerBound: 500
          ttl: 10s
        - amountUSDLowerBound: 1001
          ttl: 10s
        - amountUSDLowerBound: 2000
          ttl: 10s
        - amountUSDLowerBound: 5000
          ttl: 10s
        - amountUSDLowerBound: 10000
          ttl: 10s
      priceImpactThreshold: 0.005
      shrinkFuncName: "round"
      shrinkDecimalBase: 10
      shrinkFuncPowExp: 0.7
      shrinkFuncLogPercent: 1.01
  buildRoute:
    chainId: *chainId
    rfq:
      - id: kyberswap-limit-order-v2
        handler: limit-order
        properties:
          chainID: *chainId
          limitOrderHTTPUrl: https://limit-order.stg.kyberengineering.io
    faultyPools:
      windowSize: 15m
      faultyExpiredTime: 3m
  poolFactory:
    chainId: *chainId
  poolManager:
    blacklistedPoolSet: *blacklistedPoolSet
    capacity: 1000000
    poolRenewalInterval: 3s
    faultyPoolsExpireThreshold: 3s
    maxFaultyPoolSize: 500
  indexPools:
    whitelistedTokenSet: *whitelistedTokenSet
    chunkSize: 3000
  trackExecutor:
    subgraphURL: https://arbitrum-graph.kyberengineering.io/subgraphs/name/kybernetwork/kyberswap-aggregator-arbitrum
job:
  indexPools:
    interval: 2s
  updateSuggestedGasPrice:
    interval: 15s
  trackExecutorBalance:
    interval: 1h
repository:
  gas:
    redis:
      prefix: *chainName
    ristretto:
      numCounters: 5000
      maxCost: 500
      bufferItems: 64
      suggestedGasPrice:
        cost: 1
        ttl: 2m
  pool:
    redis:
      prefix: *chainName
  price:
    redis:
      prefix: *chainName
    ristretto:
      numCounters: 10000
      maxCost: 1000
      bufferItems: 64
      price:
        cost: 1
        ttl: 1m
  token:
    redis:
      prefix: *chainName
    goCache:
      expiration: -1
      cleanupInterval: -1
  poolRank:
    redis:
      prefix: *chainName
  route:
    redisCache:
      prefix: *chainName
      localCacheSize: 5000
      localCacheTtl: 30s
  blackjack:
    grpcClient:
      baseURL: blackjack-global-api.blackjack.svc:9080
      insecure: true
      timeout: 100ms
validator:
  buildRouteParams:
    slippageToleranceGte: 0
    slippageToleranceLte: 5000
    blacklistedRecipientSet:
  getRouteEncodeParams:
    slippageToleranceGte: 0
    slippageToleranceLte: 5000
    blacklistedRecipientSet:
