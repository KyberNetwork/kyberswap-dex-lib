env: &env "production"
http:
  bindAddress: ":8080"
  mode: release #(debug,release,test)
  prefix: /zksync
grpc:
  host: 0.0.0.0
  port: 10443
common:
  chainId: &chainId 324
  chainName: &chainName zksync
  rpc: "https://mainnet.era.zksync.io"
  rpcTimeout: 100ms
  multicallAddress: "0xcA11bde05977b3631167028862bE2a173976CA11"
  executorAddress: &executorAddress "0x29Ec5780a7774BACC9AD2B2C12aDecE57D4aDbb5"
  routerAddress: &routerAddress "0x3F95eF3f2eAca871858dbE20A93c01daF6C2e923"
  whitelistedTokenSet: &whitelistedTokenSet
    0x5aea5775959fbc2557cc8789bc1bf90a239d9a91: true # WETH
    0x3355df6d4c9c3035724fd0e3914de96a5a83aaf4: true # USDC
    0x493257fd37edb34451f62edf8d2a0c418852ba4c: true # USDT
    0x2039bb4116b4efc145ec4f0e2ea75012d6c0f181: true # BUSD
    0x8e86e46278518efc1c5ced245cba2c7e3ef11557: true # USD+
  blacklistedPoolSet: &blacklistedPoolSet
  availableSources: &availableSources
    - "velocore"
    - "muteswitch"
    - "maverick-v1"
    - "vesync"
    - "iziswap"
    - "uniswapv3"
    - "ezkalibur"
    - "wagmi"
    - "kyberswap"
    - "pancake"
    - "spacefi"
    - "zkswap"
    - "velocore-v2-wombat-stable"
    - "fulcrom"
    - "syncswap"
    - "syncswapv2-classic"
    - "syncswapv2-stable"
    - "syncswapv2-aqua"
    - "pancake-v3"
    - "zkswap-finance"
    - "zkswap-stable"
    - "zkswap-v3"
    - "zkera-finance"
    - "woofi-v2"
    - "kyberswap-limit-order-v2"
    - "koi-cl"
    - "woofi-v3"
    - "lo1inch"
    - "hold-fun"
    - "overnight-usdp"
  excludedSourcesByClient: &excludedSourcesByClient
  featureFlags:
  maxThresholdAmountInUSD: &maxThresholdAmountInUSD 100000000
  getBestPoolsOptions: &getBestPoolsOptions
    directPoolsCount: 100
    whitelistPoolsCount: 500
    tokenInPoolsCount: 200
    tokenOutPoolCount: 200
    amplifiedTvlDirectPoolsCount: 50
    amplifiedTvlWhitelistPoolsCount: 200
    amplifiedTvlTokenInPoolsCount: 100
    amplifiedTvlTokenOutPoolCount: 100
    amountInThreshold: *maxThresholdAmountInUSD
  useAEVM: &useAEVM false
  aggregatorTransactionTopic: &aggregatorTransactionTopic "routeSummary"
  liquidityScoreInputFileName: &liquidityScoreInputFileName "./scores.csv"
  liquidityTradesDataFileName: &liquidityTradesDataFileName "./trade_data.txt"
  alphaFeeConfig: &alphaFeeConfig
    reductionConfig:
      reductionFactorInBps:
        kyber-pmm: 5000
      maxThresholdPercentageInBps: 9900
      minDifferentThresholdUSD: 0.01
      minDifferentThresholdBps: 1000
      defaultAlphaFeePercentageBps: 0.1651
    ttl: 600s
log:
  sentryDSN: "https://6cd398671bde455f8fadad6dbfe87a67@sentry-v2.knstats.com/48"
  consoleLevel: info
  enableConsole: true
  enableJSONFormat: true
redis:
  addresses:
  masterName: ""
  dbNumber: 0
  password: ""
  prefix: *chainName
  readTimeout: 3s
  writeTimeout: 3s
  readOnly: false
  routeRandomly: false
pregenRedis:
  addresses:
  masterName: ""
  dbNumber: 0
  password: ""
  prefix: *chainName
  readTimeout: 3s
  writeTimeout: 3s
  readOnly: false
  routeRandomly: false
poolRedis:
  addresses:
  masterName: ""
  dbNumber: 0
  password: ""
  prefix: *chainName
  readTimeout: 3s
  writeTimeout: 3s
  readOnly: false
  routeRandomly: false
poolEventRedis:
  addresses:
  masterName: ""
  dbNumber: 0
  password: ""
  prefix: *chainName
  readTimeout: 3s
  writeTimeout: 3s
  readOnly: false
  routeRandomly: false
kafka:
  enable: false
  addresses: "localhost:9092"
  useAuthentication: false
  username:
  password:
  prefix: *chainName
  separator: "."
keyPair:
  storageFilePath: ""
  keyIDForSealingData:
    clientData: "1"
reloadConfig:
  httpUrl: ""
  interval: 10s
  serviceName: "aggregator"
  chainID: *chainId
metrics:
  host:
  port: 8125
  namespace: "kybernetwork."
encoder:
  chainId: *chainId
  routerAddress: *routerAddress
  executorAddress: *executorAddress
  executorV2Address: 0x36C3253C0F1f76F0831a2B187CEA2679F95BC7BE
  opPrivateKey:
  isPositiveSlippageEnabled: true
  minimumPSThreshold: 1000000
  executorAddressByClientID:
  partnerPositiveSlippageInfo:
    tritium-research:
      feeSharingAddress: 0x4f82e73edb06d29ff62c91ec8f5ff06571bdeb29
      randomReturnAmountInflation: 0.00006
    llamaswap:
      receiver:
      percent:
      feeMode:
      feeSharingAddress:
    kyberswap:
      feeSharingAddress: 0x4f82e73edb06d29ff62c91ec8f5ff06571bdeb29
      feeReferralAddress: 0xb826162fbeb7c631d1bfb5fbff8b77442432b826
    kyberswap-earn:
      feeSharingAddress: 0x4f82e73edb06d29ff62c91ec8f5ff06571bdeb29
      feeReferralAddress: 0xb826162fbeb7c631d1bfb5fbff8b77442432b826
    bitgetswap:
      feeSharingAddress: 0x4f82e73edb06d29ff62c91ec8f5ff06571bdeb29
      feeReferralAddress: 0xb826162fbeb7c631d1bfb5fbff8b77442432b826
useCase:
  getRoute:
    chainId: *chainId
    routerAddress: *routerAddress
    availableSources: *availableSources
    excludedSourcesByClient: *excludedSourcesByClient
    defaultPoolsIndex: nativeTvl
    salt: &salt
    aggregator:
      whitelistedTokenSet: *whitelistedTokenSet
      getBestPoolsOptions: *getBestPoolsOptions
      finderOptions:
        maxHops: 3
        distributionPercent: 5
        maxPathsInRoute: 20
        maxPathsInFallbackRoute: 5
        maxPathsToGenerate: 5
        maxPathsToReturn: 200
        minPartUSD: 500
        minThresholdAmountInUSD: 0
        maxThresholdAmountInUSD: *maxThresholdAmountInUSD
        isHillClimbEnabled: false
        hillClimbDistributionPercent: 1
        hillClimbIteration: 2
        hillClimbMinPartUSD: 500
        isPathGeneratorEnabled: false
        useAEVMRemoteFinder: false
        remoteUseAEVMPool: false
        localUseAEVMPool: false
    cache:
      defaultTtl: 15s
      ttlByAmount:
        - amount: 1
          ttl: 30s
        - amount: 2
          ttl: 10s
        - amount: 5
          ttl: 10s
        - amount: 10
          ttl: 10s
        - amount: 11
          ttl: 30s
        - amount: 15
          ttl: 10s
        - amount: 20
          ttl: 10s
        - amount: 22
          ttl: 30s
        - amount: 25
          ttl: 10s
        - amount: 30
          ttl: 10s
        - amount: 33
          ttl: 30s
        - amount: 35
          ttl: 10s
        - amount: 40
          ttl: 10s
        - amount: 44
          ttl: 30s
        - amount: 45
          ttl: 10s
        - amount: 50
          ttl: 10s
        - amount: 55
          ttl: 30s
        - amount: 60
          ttl: 10s
        - amount: 66
          ttl: 30s
        - amount: 70
          ttl: 10s
        - amount: 77
          ttl: 30s
        - amount: 80
          ttl: 10s
        - amount: 88
          ttl: 30s
        - amount: 90
          ttl: 10s
        - amount: 99
          ttl: 30s
        - amount: 100
          ttl: 10s
        - amount: 500
          ttl: 10s
        - amount: 1000
          ttl: 10s
        - amount: 10000
          ttl: 10s
        - amount: 100000
          ttl: 10s
      ttlByAmountUsdRange:
        - amountUSDLowerBound: 0
          ttl: 10s
        - amountUSDLowerBound: 101
          ttl: 10s
        - amountUSDLowerBound: 500
          ttl: 10s
        - amountUSDLowerBound: 1001
          ttl: 10s
        - amountUSDLowerBound: 2000
          ttl: 10s
        - amountUSDLowerBound: 5000
          ttl: 10s
        - amountUSDLowerBound: 10000
          ttl: 10s
      ttlByAmountRange:
        - amountLowerBound: "0"
          ttl: 50s
      priceImpactThreshold: 0.005
      shrinkFuncName: "decimal"
      shrinkDecimalBase: 8
      shrinkFuncPowExp: 0.7
      shrinkFuncLogPercent: 1.01
      enableNewCacheKeyGenerator: true
      shrinkAmountInConfigs:
        - shrinkFuncName: "logarithm"
          shrinkFuncConstant: 1.1
        - shrinkFuncName: "logarithm"
          shrinkFuncConstant: 1.3
        - shrinkFuncName: "logarithm"
          shrinkFuncConstant: 1.5
      shrinkAmountInThreshold: 100000
      minAmountInUSD: 0.9
    safetyQuoteConfig:
      excludeOneSwapEnable: true
      factor:
        Default: 0
        Converter: 0
        StrictlyStable: 0
        Stable: 0.5
        Correlated: 1.5
        LowSlippage: 3
        NormalSlippage: 10
        HighSlippage: 50
      whitelistedClient:
    alphaFeeConfig: *alphaFeeConfig
  getCustomRoute:
    aggregator:
      finderOptions:
        maxHops: 5
  buildRoute:
    chainId: *chainId
    forceSourceByIp:
      '47_130_37_231': tritium-research
      '52_74_71_138': tritium-research
    validateChecksumBySource:
      'tritium-research': true
    salt: *salt
    faultyPools:
      minSlippageThreshold: 1000
      whitelistedTokenSet: *whitelistedTokenSet
    rfq:
      kyberswap-limit-order-v2:
        handler: limit-order
        properties:
          chainID: *chainId
          limitOrderHTTPUrl: http://limit-order.core-cluster.gke.production.internal
    rfqAcceptableSlippageFraction: 1000
    faultyPoolDetectorDisabled: false
    publisher:
      aggregatorTransactionTopic: *aggregatorTransactionTopic
    alphaFeeConfig: *alphaFeeConfig
    clientRefCode:
      bitgetswap: bitget

  poolFactory:
    chainId: *chainId
  poolManager:
    availableSources: *availableSources
    blacklistedPoolSet: *blacklistedPoolSet
    blackListRenewalInterval: 30s
    faultyPoolsRenewalInterval: 5s
    capacity: 100000
    poolRenewalInterval: 3s
    faultyPoolsExpireThreshold: 3s
  indexPools:
    whitelistedTokenSet: *whitelistedTokenSet
    chunkSize: 3000
    maxGoroutines: 0
    enableRankByNative: false
    maxDirectIndexLenForZeroTvl: 10
  trackExecutor:
    subgraphURL: https://zksync-graph.kyberengineering.io/subgraphs/name/kybernetwork/kyberswap-aggregator-zksync
  tradeDataGenerator:
    whitelistedTokenSet: *whitelistedTokenSet
    blacklistedPoolSet: *blacklistedPoolSet
    chunkSize: 200
    useAEVM: *useAEVM
    dexUseAEVM:
    minDataPointNumber: 6
    maxDataPointNumber: 12
    availableSources: *availableSources
  updateLiquidityScore:
    meanType: "geometric"
    getBestPoolsOptions: *getBestPoolsOptions
job:
  indexPools:
    forceScanAllEveryNth: 10
    interval: 2s
    poolEvent:
      consumerConfig:
        prefix: *chainName
        stream: "pool_events"
        group: "router_indexPools"
        key: "message"
        block: 300ms
        count: 100
        bufferSize: 20
        ackBufferSize: 10
      batchRate: 700ms
      batchSize: 100
      retryInterval: 5s
  updateSuggestedGasPrice:
    interval: 15s
  trackExecutorBalance:
    interval: 1h
  liquidityScoreIndexPools:
    env: *env
    batchSize: 200
    interval: 1h
    successedFileName: *liquidityTradesDataFileName
    failedFileName: "./failed_trade_data.txt"
    liquidityScoreInputFileName: *liquidityScoreInputFileName
    liquidityScoreCalcScript: "./cmd/liquidityscore/main.py"
    exportFailedTrade: false
    targetFactorEntropy: 0.995
    poolEvent:
      consumerConfig:
        prefix: *chainName
        stream: "pool_events"
        group: "router_liqIndexPools"
        key: "message"
        block: 300ms
        count: 200
        bufferSize: 20
        ackBufferSize: 10
      batchRate: 700ms
      batchSize: 100
      retryInterval: 5s
repository:
  gas:
    redis:
      prefix: *chainName
    ristretto:
      numCounters: 5000
      maxCost: 500
      bufferItems: 64
      suggestedGasPrice:
        cost: 1
        ttl: 2m
  pool:
    redis:
      prefix: *chainName
      maxFaultyPoolSize: 500
    ristretto:
      numCounters: 20000
      maxCost: 2000
      bufferItems: 64
      faultyPools:
        cost: 1
        ttl: 5s
      faultyIndexPools:
        cost: 1
        ttl: 30m
  onchainprice:
    grpc:
      base_url: onchain-price.core-cluster.gke.production.internal:80
      timeout: 300ms
      insecure: true
      client_id: router-service
    ristretto:
      numCounters: 10000
      maxCost: 1000
      bufferItems: 64
      price:
        cost: 1
        ttl: 1m
  poolService:
    baseUrl: "0.0.0.0:10443"
    insecure: true
    timeout: 100ms
    chainId: *chainId
  token:
    redis:
      prefix: *chainName
    goCache:
      expiration: -1
      cleanupInterval: -1
      chainId: *chainId
    http:
      timeout: 5s
      baseUrl: "http://token-catalog-api.core-cluster.gke.production.internal:80"
  poolRank:
    redis:
      prefix: *chainName
  route:
    redis:
      prefix: *chainName
    ristretto:
      numCounters: 10000
      maxCost: 1000
      bufferItems: 64
      prefix: *chainName
      route:
        cost: 1
        ttl: 10s
  blackjack:
    grpcClient:
      baseURL: blackjack.core-cluster.gke.production.internal:80
      insecure: true
      timeout: 100ms
  erc20balanceslot:
    redis:
      prefix: *chainName
  alphaFee:
    redis:
      prefix: *chainName
      separator: ":"
      ttl: 600s
validator:
  slippageValidatorConfig:
    slippageToleranceGte: 0
    slippageToleranceLte: 5000
  buildRouteParams:
    blacklistedRecipientSet:
  getRouteEncodeParams:
    blacklistedRecipientSet:
bundledRouteEnabled: false
