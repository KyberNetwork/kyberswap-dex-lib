env: "production"
pprof: false
http:
  bindAddress: ":8080"
  mode: release #(debug,release,test)
  prefix: /cronos
grpc:
  host: 0.0.0.0
  port: 10443
common:
  chainId: &chainId 25
  chainName: &chainName cronos
  rpc: "https://cronos.kyberengineering.io"
  multicallAddress: "0xcA11bde05977b3631167028862bE2a173976CA11"
  executorAddress: &executorAddress "0xd1B47490209CcB7A806E8a45d9479490C040ABf4"
  routerAddress: &routerAddress "0x6131B5fae19EA4f9D964eAc0408E4408b66337b5"
  gasTokenAddress: &gasTokenAddress "0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23"
  whitelistedTokenSet: &whitelistedTokenSet
    0x5c7f8a570d578ed84e63fdfa7b1ee72deae1ae23: true # WCRO
    0xe44fd7fcb2b1581822d0c862b68222998a0c299a: true # WETH
    0x66e428c3f67a68878562e79a0234c1f83c208770: true # USDT
    0xf2001b145b43032aaf5ee2884e456ccd805f677d: true # DAI
    0xc21223249ca28397b4b6541dffaecc539bff0c59: true # USDC
    0x062e66477faf219f25d27dced647bf57c3107d52: true # WBTC
  blacklistedPoolSet: &blacklistedPoolSet
  availableSources: &availableSources
    - "kyberswap"
    - "kyberswap-static"
    - "kyberswap-elastic"
    - "vvs"
    - "cronaswap"
    - "crodex"
    - "mmf"
    - "empiredex"
    - "photonswap"
    - "fulcrom"
  featureFlags: &featureFlags
log:
  sentryDSN: "https://6cd398671bde455f8fadad6dbfe87a67@sentry-v2.knstats.com/48"
  consoleLevel: info
  enableConsole: true
  enableJSONFormat: true
redis:
  addresses:
  masterName: ""
  dbNumber: 0
  password: ""
  prefix: *chainName
  readTimeout: 3s
  writeTimeout: 3s
  readOnly: false
  routeRandomly: false
pregenRedis:
  addresses:
  masterName: ""
  dbNumber: 0
  password: ""
  prefix: *chainName
  readTimeout: 3s
  writeTimeout: 3s
  readOnly: false
  routeRandomly: false
poolRedis:
  addresses:
  masterName: ""
  dbNumber: 0
  password: ""
  prefix: *chainName
  readTimeout: 3s
  writeTimeout: 3s
  readOnly: false
  routeRandomly: false
poolEventRedis:
  addresses:
  masterName: ""
  dbNumber: 0
  password: ""
  prefix: *chainName
  readTimeout: 3s
  writeTimeout: 3s
  readOnly: false
  routeRandomly: false
ddAgentHost: ""
keyPair:
  storageFilePath: ""
  keyIDForSealingData:
    clientData: "1"
reloadConfig:
  httpUrl: ""
  interval: 10s
  serviceName: "aggregator"
  chainID: *chainId
secretKey:
metrics:
  host:
  port: 8125
  namespace: "kybernetwork."
blacklistedPools:
encoder:
  chainId: *chainId
  executorAddress: *executorAddress
  routerAddress: *routerAddress
  isPositiveSlippageEnabled: true
  minimumPSThreshold: 1000000
  executorAddressByClientID:
    defillama: *executorAddress
  partnerPositiveSlippageInfo:
    defillama:
      receiver:
      percent:
      feeMode:
      feeSharingAddress:
useCase:
  getRoute:
    chainId: *chainId
    gasTokenAddress: *gasTokenAddress
    routerAddress: *routerAddress
    availableSources: *availableSources
    aggregator:
      whitelistedTokenSet: *whitelistedTokenSet
      getBestPoolsOptions:
        directPoolsCount: 100
        whitelistPoolsCount: 500
        tokenInPoolsCount: 200
        tokenOutPoolCount: 200
        amplifiedTvlDirectPoolsCount: 50
        amplifiedTvlWhitelistPoolsCount: 200
        amplifiedTvlTokenInPoolsCount: 100
        amplifiedTvlTokenOutPoolCount: 100
      finderOptions:
        maxHops: 3
        distributionPercent: 5
        maxPathsInRoute: 20
        maxPathsToGenerate: 5
        maxPathsToReturn: 200
        minPartUSD: 500
        minThresholdAmountInUSD: 0
        maxThresholdAmountInUSD: 100000000
        isHillClimbEnabled: false
        hillClimbDistributionPercent: 1
        hillClimbIteration: 2
        hillClimbMinPartUSD: 500
        isPathGeneratorEnabled: false
    cache:
      defaultTtl: 15s
      ttlByAmount:
        - amount: 1
          ttl: 30s
        - amount: 2
          ttl: 10s
        - amount: 5
          ttl: 10s
        - amount: 10
          ttl: 10s
        - amount: 11
          ttl: 30s
        - amount: 15
          ttl: 10s
        - amount: 20
          ttl: 10s
        - amount: 22
          ttl: 30s
        - amount: 25
          ttl: 10s
        - amount: 30
          ttl: 10s
        - amount: 33
          ttl: 30s
        - amount: 35
          ttl: 10s
        - amount: 40
          ttl: 10s
        - amount: 44
          ttl: 30s
        - amount: 45
          ttl: 10s
        - amount: 50
          ttl: 10s
        - amount: 55
          ttl: 30s
        - amount: 60
          ttl: 10s
        - amount: 66
          ttl: 30s
        - amount: 70
          ttl: 10s
        - amount: 77
          ttl: 30s
        - amount: 80
          ttl: 10s
        - amount: 88
          ttl: 30s
        - amount: 90
          ttl: 10s
        - amount: 99
          ttl: 30s
        - amount: 100
          ttl: 10s
        - amount: 500
          ttl: 10s
        - amount: 1000
          ttl: 10s
        - amount: 10000
          ttl: 10s
        - amount: 100000
          ttl: 10s
      ttlByAmountUsdRange:
        - amountUSDLowerBound: 0
          ttl: 10s
        - amountUSDLowerBound: 101
          ttl: 10s
        - amountUSDLowerBound: 500
          ttl: 10s
        - amountUSDLowerBound: 1001
          ttl: 10s
        - amountUSDLowerBound: 2000
          ttl: 10s
        - amountUSDLowerBound: 5000
          ttl: 10s
        - amountUSDLowerBound: 10000
          ttl: 10s
      ttlByAmountRange:
        - amountLowerBound: "0"
          ttl: 10s
      priceImpactThreshold: 0.005
      shrinkFuncName: "round"
      shrinkDecimalBase: 10
      shrinkFuncPowExp: 0.7
      shrinkFuncLogPercent: 1.01
      enableNewCacheKeyGenerator: false
      shrinkAmountInConfigs:
        - shrinkFuncName: "logarithm"
          shrinkFuncConstant: 1.1
        - shrinkFuncName: "logarithm"
          shrinkFuncConstant: 1.3
        - shrinkFuncName: "logarithm"
          shrinkFuncConstant: 1.5
      shrinkAmountInThreshold: 100000
      minAmountInUSD: 0.9
  buildRoute:
    chainId: *chainId
    faultyPools:
      minSlippageThreshold: 1000
      whitelistedTokenSet: *whitelistedTokenSet
  poolFactory:
    chainId: *chainId
  poolManager:
    blacklistedPoolSet: *blacklistedPoolSet
    blackListRenewalInterval: 30s
    capacity: 1000000
    poolRenewalInterval: 3s
    faultyPoolsExpireThreshold: 3s
  indexPools:
    whitelistedTokenSet: *whitelistedTokenSet
    chunkSize: 3000
    maxGoroutines: 0
    enableRankByNative: false
  trackExecutor:
    subgraphURL: https://cronos-graph.kyberengineering.io/subgraphs/name/kybernetwork/kyberswap-aggregator-cronos
job:
  indexPools:
    forceScanAllEveryNth: 10
    interval: 2s
    poolEvent:
      consumerConfig:
        prefix: *chainName
        stream: "pool_events"
        group: "router_indexPools"
        key: "message"
        block: 300ms
        count: 100
        bufferSize: 20
        ackBufferSize: 10
      batchRate: 700ms
      batchSize: 100
      retryInterval: 5s
  updateSuggestedGasPrice:
    interval: 15s
  trackExecutorBalance:
    interval: 1h
repository:
  gas:
    redis:
      prefix: *chainName
    ristretto:
      numCounters: 5000
      maxCost: 500
      bufferItems: 64
      suggestedGasPrice:
        cost: 1
        ttl: 2m
  pool:
    redis:
      prefix: *chainName
      maxFaultyPoolSize: 500
    ristretto:
      numCounters: 5000
      maxCost: 500
      bufferItems: 64
      faultyPools:
        cost: 1
        ttl: 5s
  price:
    redis:
      prefix: *chainName
    ristretto: &pricecache
      numCounters: 10000
      maxCost: 1000
      bufferItems: 64
      price:
        cost: 1
        ttl: 1m
  onchainprice:
    enabled: false
    grpc:
      base_url: onchain-price.core-cluster.gke.production.internal:80
      timeout: 300ms
      insecure: true
      client_id: router-service
    ristretto: *pricecache
  poolService:
    baseUrl: "0.0.0.0:10443"
    insecure: true
    timeout: 100ms
    chainId: *chainId
  token:
    redis:
      prefix: *chainName
    goCache:
      expiration: -1
      cleanupInterval: -1
  poolRank:
    redis:
      prefix: *chainName
    useNativeRanking: false
  route:
    redis:
      prefix: *chainName
    ristretto:
      numCounters: 10000
      maxCost: 1000
      bufferItems: 64
      prefix: *chainName
      route:
        cost: 1
        ttl: 10s
  blackjack:
    grpcClient:
      baseURL: blackjack.core-cluster.gke.production.internal:80
      insecure: true
      timeout: 100ms
  erc20balanceslot:
    redis:
      prefix: *chainName
validator:
  slippageValidatorConfig:
    slippageToleranceGte: 0
    slippageToleranceLte: 5000
  buildRouteParams:
    blacklistedRecipientSet:
  getRouteEncodeParams:
    blacklistedRecipientSet:
