// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/KyberNetwork/kyberswap-aggregator/internal/pkg/api (interfaces: IBuildRouteParamsValidator)

// Package api is a generated GoMock package.
package api

import (
	reflect "reflect"

	params "github.com/KyberNetwork/kyberswap-aggregator/internal/pkg/api/params"
	gomock "github.com/golang/mock/gomock"
)

// MockIBuildRouteParamsValidator is a mock of IBuildRouteParamsValidator interface.
type MockIBuildRouteParamsValidator struct {
	ctrl     *gomock.Controller
	recorder *MockIBuildRouteParamsValidatorMockRecorder
}

// MockIBuildRouteParamsValidatorMockRecorder is the mock recorder for MockIBuildRouteParamsValidator.
type MockIBuildRouteParamsValidatorMockRecorder struct {
	mock *MockIBuildRouteParamsValidator
}

// NewMockIBuildRouteParamsValidator creates a new mock instance.
func NewMockIBuildRouteParamsValidator(ctrl *gomock.Controller) *MockIBuildRouteParamsValidator {
	mock := &MockIBuildRouteParamsValidator{ctrl: ctrl}
	mock.recorder = &MockIBuildRouteParamsValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIBuildRouteParamsValidator) EXPECT() *MockIBuildRouteParamsValidatorMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *MockIBuildRouteParamsValidator) Validate(arg0 params.BuildRouteParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockIBuildRouteParamsValidatorMockRecorder) Validate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockIBuildRouteParamsValidator)(nil).Validate), arg0)
}
