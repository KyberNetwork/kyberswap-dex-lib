// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/KyberNetwork/kyberswap-aggregator/internal/pkg/api (interfaces: IGetTokensParamsValidator)

// Package api is a generated GoMock package.
package api

import (
	reflect "reflect"

	params "github.com/KyberNetwork/kyberswap-aggregator/internal/pkg/api/params"
	gomock "github.com/golang/mock/gomock"
)

// MockIGetTokensParamsValidator is a mock of IGetTokensParamsValidator interface.
type MockIGetTokensParamsValidator struct {
	ctrl     *gomock.Controller
	recorder *MockIGetTokensParamsValidatorMockRecorder
}

// MockIGetTokensParamsValidatorMockRecorder is the mock recorder for MockIGetTokensParamsValidator.
type MockIGetTokensParamsValidatorMockRecorder struct {
	mock *MockIGetTokensParamsValidator
}

// NewMockIGetTokensParamsValidator creates a new mock instance.
func NewMockIGetTokensParamsValidator(ctrl *gomock.Controller) *MockIGetTokensParamsValidator {
	mock := &MockIGetTokensParamsValidator{ctrl: ctrl}
	mock.recorder = &MockIGetTokensParamsValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIGetTokensParamsValidator) EXPECT() *MockIGetTokensParamsValidatorMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *MockIGetTokensParamsValidator) Validate(arg0 params.GetTokensParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockIGetTokensParamsValidatorMockRecorder) Validate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockIGetTokensParamsValidator)(nil).Validate), arg0)
}
