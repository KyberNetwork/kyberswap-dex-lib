// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/KyberNetwork/router-service/internal/pkg/api (interfaces: IGetRoutesParamsValidator)
//
// Generated by this command:
//
//	mockgen -destination ../mocks/api/get_routes_params_validator.go -package api github.com/KyberNetwork/router-service/internal/pkg/api IGetRoutesParamsValidator
//

// Package api is a generated GoMock package.
package api

import (
	reflect "reflect"

	params "github.com/KyberNetwork/router-service/internal/pkg/api/params"
	gomock "go.uber.org/mock/gomock"
)

// MockIGetRoutesParamsValidator is a mock of IGetRoutesParamsValidator interface.
type MockIGetRoutesParamsValidator struct {
	ctrl     *gomock.Controller
	recorder *MockIGetRoutesParamsValidatorMockRecorder
	isgomock struct{}
}

// MockIGetRoutesParamsValidatorMockRecorder is the mock recorder for MockIGetRoutesParamsValidator.
type MockIGetRoutesParamsValidatorMockRecorder struct {
	mock *MockIGetRoutesParamsValidator
}

// NewMockIGetRoutesParamsValidator creates a new mock instance.
func NewMockIGetRoutesParamsValidator(ctrl *gomock.Controller) *MockIGetRoutesParamsValidator {
	mock := &MockIGetRoutesParamsValidator{ctrl: ctrl}
	mock.recorder = &MockIGetRoutesParamsValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIGetRoutesParamsValidator) EXPECT() *MockIGetRoutesParamsValidatorMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *MockIGetRoutesParamsValidator) Validate(params params.GetRoutesParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", params)
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockIGetRoutesParamsValidatorMockRecorder) Validate(params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockIGetRoutesParamsValidator)(nil).Validate), params)
}
