// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/KyberNetwork/router-service/internal/pkg/usecase/poolmanager (interfaces: IPoolRankRepository)

// Package poolmanager is a generated GoMock package.
package poolmanager

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIPoolRankRepository is a mock of IPoolRankRepository interface.
type MockIPoolRankRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIPoolRankRepositoryMockRecorder
}

// MockIPoolRankRepositoryMockRecorder is the mock recorder for MockIPoolRankRepository.
type MockIPoolRankRepositoryMockRecorder struct {
	mock *MockIPoolRankRepository
}

// NewMockIPoolRankRepository creates a new mock instance.
func NewMockIPoolRankRepository(ctrl *gomock.Controller) *MockIPoolRankRepository {
	mock := &MockIPoolRankRepository{ctrl: ctrl}
	mock.recorder = &MockIPoolRankRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPoolRankRepository) EXPECT() *MockIPoolRankRepositoryMockRecorder {
	return m.recorder
}

// FindGlobalBestPools mocks base method.
func (m *MockIPoolRankRepository) FindGlobalBestPools(arg0 context.Context, arg1 int64) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindGlobalBestPools", arg0, arg1)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindGlobalBestPools indicates an expected call of FindGlobalBestPools.
func (mr *MockIPoolRankRepositoryMockRecorder) FindGlobalBestPools(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindGlobalBestPools", reflect.TypeOf((*MockIPoolRankRepository)(nil).FindGlobalBestPools), arg0, arg1)
}

// FindGlobalBestPoolsByScores mocks base method.
func (m *MockIPoolRankRepository) FindGlobalBestPoolsByScores(arg0 context.Context, arg1 int64, arg2 string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindGlobalBestPoolsByScores", arg0, arg1, arg2)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindGlobalBestPoolsByScores indicates an expected call of FindGlobalBestPoolsByScores.
func (mr *MockIPoolRankRepositoryMockRecorder) FindGlobalBestPoolsByScores(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindGlobalBestPoolsByScores", reflect.TypeOf((*MockIPoolRankRepository)(nil).FindGlobalBestPoolsByScores), arg0, arg1, arg2)
}
