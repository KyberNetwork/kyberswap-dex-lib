// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/KyberNetwork/router-service/internal/pkg/usecase/getroute (interfaces: IPoolManager)

// Package getroute is a generated GoMock package.
package getroute

import (
	context "context"
	reflect "reflect"

	aevmclient "github.com/KyberNetwork/aevm/client"
	pool "github.com/KyberNetwork/kyberswap-dex-lib/pkg/source/pool"
	common "github.com/ethereum/go-ethereum/common"
	gomock "github.com/golang/mock/gomock"
)

// MockIPoolManager is a mock of IPoolManager interface.
type MockIPoolManager struct {
	ctrl     *gomock.Controller
	recorder *MockIPoolManagerMockRecorder
}

// MockIPoolManagerMockRecorder is the mock recorder for MockIPoolManager.
type MockIPoolManagerMockRecorder struct {
	mock *MockIPoolManager
}

// NewMockIPoolManager creates a new mock instance.
func NewMockIPoolManager(ctrl *gomock.Controller) *MockIPoolManager {
	mock := &MockIPoolManager{ctrl: ctrl}
	mock.recorder = &MockIPoolManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPoolManager) EXPECT() *MockIPoolManagerMockRecorder {
	return m.recorder
}

// GetAEVMClient mocks base method.
func (m *MockIPoolManager) GetAEVMClient() aevmclient.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAEVMClient")
	ret0, _ := ret[0].(aevmclient.Client)
	return ret0
}

// GetAEVMClient indicates an expected call of GetAEVMClient.
func (mr *MockIPoolManagerMockRecorder) GetAEVMClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAEVMClient", reflect.TypeOf((*MockIPoolManager)(nil).GetAEVMClient))
}

// GetPoolByAddress mocks base method.
func (m *MockIPoolManager) GetPoolByAddress(arg0 context.Context, arg1, arg2 []string, arg3 common.Hash) (map[string]pool.IPoolSimulator, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPoolByAddress", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(map[string]pool.IPoolSimulator)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPoolByAddress indicates an expected call of GetPoolByAddress.
func (mr *MockIPoolManagerMockRecorder) GetPoolByAddress(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPoolByAddress", reflect.TypeOf((*MockIPoolManager)(nil).GetPoolByAddress), arg0, arg1, arg2, arg3)
}
