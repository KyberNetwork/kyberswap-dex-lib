// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/KyberNetwork/router-service/internal/pkg/usecase/buildroute (interfaces: IEncodeBuilder)
//
// Generated by this command:
//
//	mockgen -destination ../../mocks/usecase/buildroute/encoder_builder.go -package buildroute github.com/KyberNetwork/router-service/internal/pkg/usecase/buildroute IEncodeBuilder
//

// Package buildroute is a generated GoMock package.
package buildroute

import (
	reflect "reflect"

	encode "github.com/KyberNetwork/aggregator-encoding/pkg/encode"
	valueobject "github.com/KyberNetwork/kyberswap-dex-lib/pkg/valueobject"
	gomock "go.uber.org/mock/gomock"
)

// MockIEncodeBuilder is a mock of IEncodeBuilder interface.
type MockIEncodeBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockIEncodeBuilderMockRecorder
}

// MockIEncodeBuilderMockRecorder is the mock recorder for MockIEncodeBuilder.
type MockIEncodeBuilderMockRecorder struct {
	mock *MockIEncodeBuilder
}

// NewMockIEncodeBuilder creates a new mock instance.
func NewMockIEncodeBuilder(ctrl *gomock.Controller) *MockIEncodeBuilder {
	mock := &MockIEncodeBuilder{ctrl: ctrl}
	mock.recorder = &MockIEncodeBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIEncodeBuilder) EXPECT() *MockIEncodeBuilderMockRecorder {
	return m.recorder
}

// GetEncoder mocks base method.
func (m *MockIEncodeBuilder) GetEncoder(arg0 valueobject.ChainID) encode.IEncoder {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEncoder", arg0)
	ret0, _ := ret[0].(encode.IEncoder)
	return ret0
}

// GetEncoder indicates an expected call of GetEncoder.
func (mr *MockIEncodeBuilderMockRecorder) GetEncoder(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEncoder", reflect.TypeOf((*MockIEncodeBuilder)(nil).GetEncoder), arg0)
}
