// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/KyberNetwork/router-service/internal/pkg/usecase/buildroute (interfaces: ITokenRepository)
//
// Generated by this command:
//
//	mockgen -destination ../../mocks/usecase/buildroute/token_repository.go -package buildroute github.com/KyberNetwork/router-service/internal/pkg/usecase/buildroute ITokenRepository
//

// Package buildroute is a generated GoMock package.
package buildroute

import (
	context "context"
	reflect "reflect"

	entity "github.com/KyberNetwork/kyberswap-dex-lib/pkg/entity"
	entity0 "github.com/KyberNetwork/router-service/internal/pkg/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockITokenRepository is a mock of ITokenRepository interface.
type MockITokenRepository struct {
	ctrl     *gomock.Controller
	recorder *MockITokenRepositoryMockRecorder
	isgomock struct{}
}

// MockITokenRepositoryMockRecorder is the mock recorder for MockITokenRepository.
type MockITokenRepositoryMockRecorder struct {
	mock *MockITokenRepository
}

// NewMockITokenRepository creates a new mock instance.
func NewMockITokenRepository(ctrl *gomock.Controller) *MockITokenRepository {
	mock := &MockITokenRepository{ctrl: ctrl}
	mock.recorder = &MockITokenRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITokenRepository) EXPECT() *MockITokenRepositoryMockRecorder {
	return m.recorder
}

// FindByAddresses mocks base method.
func (m *MockITokenRepository) FindByAddresses(ctx context.Context, addresses []string) ([]*entity.SimplifiedToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByAddresses", ctx, addresses)
	ret0, _ := ret[0].([]*entity.SimplifiedToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByAddresses indicates an expected call of FindByAddresses.
func (mr *MockITokenRepositoryMockRecorder) FindByAddresses(ctx, addresses any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByAddresses", reflect.TypeOf((*MockITokenRepository)(nil).FindByAddresses), ctx, addresses)
}

// FindTokenInfoByAddress mocks base method.
func (m *MockITokenRepository) FindTokenInfoByAddress(ctx context.Context, addresses []string) ([]*entity0.TokenInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindTokenInfoByAddress", ctx, addresses)
	ret0, _ := ret[0].([]*entity0.TokenInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindTokenInfoByAddress indicates an expected call of FindTokenInfoByAddress.
func (mr *MockITokenRepositoryMockRecorder) FindTokenInfoByAddress(ctx, addresses any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindTokenInfoByAddress", reflect.TypeOf((*MockITokenRepository)(nil).FindTokenInfoByAddress), ctx, addresses)
}
