// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/KyberNetwork/router-service/internal/pkg/usecase/buildroute (interfaces: IEthereumGasEstimator)
//
// Generated by this command:
//
//	mockgen -destination ../../mocks/usecase/buildroute/ethereum_gas_estimator.go -package buildroute github.com/KyberNetwork/router-service/internal/pkg/usecase/buildroute IEthereumGasEstimator
//

// Package buildroute is a generated GoMock package.
package buildroute

import (
	context "context"
	reflect "reflect"

	ethereum "github.com/ethereum/go-ethereum"
	ethclient "github.com/ethereum/go-ethereum/ethclient"
	gomock "go.uber.org/mock/gomock"
)

// MockIEthereumGasEstimator is a mock of IEthereumGasEstimator interface.
type MockIEthereumGasEstimator struct {
	ctrl     *gomock.Controller
	recorder *MockIEthereumGasEstimatorMockRecorder
	isgomock struct{}
}

// MockIEthereumGasEstimatorMockRecorder is the mock recorder for MockIEthereumGasEstimator.
type MockIEthereumGasEstimatorMockRecorder struct {
	mock *MockIEthereumGasEstimator
}

// NewMockIEthereumGasEstimator creates a new mock instance.
func NewMockIEthereumGasEstimator(ctrl *gomock.Controller) *MockIEthereumGasEstimator {
	mock := &MockIEthereumGasEstimator{ctrl: ctrl}
	mock.recorder = &MockIEthereumGasEstimatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIEthereumGasEstimator) EXPECT() *MockIEthereumGasEstimatorMockRecorder {
	return m.recorder
}

// EstimateGas mocks base method.
func (m *MockIEthereumGasEstimator) EstimateGas(ctx context.Context, call ethereum.CallMsg) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EstimateGas", ctx, call)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EstimateGas indicates an expected call of EstimateGas.
func (mr *MockIEthereumGasEstimatorMockRecorder) EstimateGas(ctx, call any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EstimateGas", reflect.TypeOf((*MockIEthereumGasEstimator)(nil).EstimateGas), ctx, call)
}

// GetETHClient mocks base method.
func (m *MockIEthereumGasEstimator) GetETHClient() *ethclient.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetETHClient")
	ret0, _ := ret[0].(*ethclient.Client)
	return ret0
}

// GetETHClient indicates an expected call of GetETHClient.
func (mr *MockIEthereumGasEstimatorMockRecorder) GetETHClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetETHClient", reflect.TypeOf((*MockIEthereumGasEstimator)(nil).GetETHClient))
}
