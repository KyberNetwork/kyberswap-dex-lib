// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/KyberNetwork/router-service/internal/pkg/usecase (interfaces: IPoolRankRepository)

// Package usecase is a generated GoMock package.
package usecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIPoolRankRepository is a mock of IPoolRankRepository interface.
type MockIPoolRankRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIPoolRankRepositoryMockRecorder
}

// MockIPoolRankRepositoryMockRecorder is the mock recorder for MockIPoolRankRepository.
type MockIPoolRankRepositoryMockRecorder struct {
	mock *MockIPoolRankRepository
}

// NewMockIPoolRankRepository creates a new mock instance.
func NewMockIPoolRankRepository(ctrl *gomock.Controller) *MockIPoolRankRepository {
	mock := &MockIPoolRankRepository{ctrl: ctrl}
	mock.recorder = &MockIPoolRankRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPoolRankRepository) EXPECT() *MockIPoolRankRepositoryMockRecorder {
	return m.recorder
}

// AddToSortedSet mocks base method.
func (m *MockIPoolRankRepository) AddToSortedSet(arg0 context.Context, arg1, arg2 string, arg3, arg4 bool, arg5, arg6 string, arg7 float64, arg8 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddToSortedSet", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddToSortedSet indicates an expected call of AddToSortedSet.
func (mr *MockIPoolRankRepositoryMockRecorder) AddToSortedSet(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToSortedSet", reflect.TypeOf((*MockIPoolRankRepository)(nil).AddToSortedSet), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
}

// RemoveFromSortedSet mocks base method.
func (m *MockIPoolRankRepository) RemoveFromSortedSet(arg0 context.Context, arg1, arg2 string, arg3, arg4 bool, arg5, arg6 string, arg7 float64, arg8 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveFromSortedSet", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveFromSortedSet indicates an expected call of RemoveFromSortedSet.
func (mr *MockIPoolRankRepositoryMockRecorder) RemoveFromSortedSet(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveFromSortedSet", reflect.TypeOf((*MockIPoolRankRepository)(nil).RemoveFromSortedSet), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
}
