// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/KyberNetwork/router-service/internal/pkg/usecase (interfaces: IIndexPoolsRouteRepository)

// Package usecase is a generated GoMock package.
package usecase

import (
	context "context"
	reflect "reflect"

	entity "github.com/KyberNetwork/router-service/internal/pkg/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockIIndexPoolsRouteRepository is a mock of IIndexPoolsRouteRepository interface.
type MockIIndexPoolsRouteRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIIndexPoolsRouteRepositoryMockRecorder
}

// MockIIndexPoolsRouteRepositoryMockRecorder is the mock recorder for MockIIndexPoolsRouteRepository.
type MockIIndexPoolsRouteRepositoryMockRecorder struct {
	mock *MockIIndexPoolsRouteRepository
}

// NewMockIIndexPoolsRouteRepository creates a new mock instance.
func NewMockIIndexPoolsRouteRepository(ctrl *gomock.Controller) *MockIIndexPoolsRouteRepository {
	mock := &MockIIndexPoolsRouteRepository{ctrl: ctrl}
	mock.recorder = &MockIIndexPoolsRouteRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIIndexPoolsRouteRepository) EXPECT() *MockIIndexPoolsRouteRepositoryMockRecorder {
	return m.recorder
}

// AddToSortedSetScoreByAmplifiedTvl mocks base method.
func (m *MockIIndexPoolsRouteRepository) AddToSortedSetScoreByAmplifiedTvl(arg0 context.Context, arg1 entity.Pool, arg2, arg3, arg4 string, arg5, arg6 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddToSortedSetScoreByAmplifiedTvl", arg0, arg1, arg2, arg3, arg4, arg5, arg6)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddToSortedSetScoreByAmplifiedTvl indicates an expected call of AddToSortedSetScoreByAmplifiedTvl.
func (mr *MockIIndexPoolsRouteRepositoryMockRecorder) AddToSortedSetScoreByAmplifiedTvl(arg0, arg1, arg2, arg3, arg4, arg5, arg6 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToSortedSetScoreByAmplifiedTvl", reflect.TypeOf((*MockIIndexPoolsRouteRepository)(nil).AddToSortedSetScoreByAmplifiedTvl), arg0, arg1, arg2, arg3, arg4, arg5, arg6)
}

// AddToSortedSetScoreByReserveUsd mocks base method.
func (m *MockIIndexPoolsRouteRepository) AddToSortedSetScoreByReserveUsd(arg0 context.Context, arg1 entity.Pool, arg2, arg3, arg4 string, arg5, arg6 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddToSortedSetScoreByReserveUsd", arg0, arg1, arg2, arg3, arg4, arg5, arg6)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddToSortedSetScoreByReserveUsd indicates an expected call of AddToSortedSetScoreByReserveUsd.
func (mr *MockIIndexPoolsRouteRepositoryMockRecorder) AddToSortedSetScoreByReserveUsd(arg0, arg1, arg2, arg3, arg4, arg5, arg6 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToSortedSetScoreByReserveUsd", reflect.TypeOf((*MockIIndexPoolsRouteRepository)(nil).AddToSortedSetScoreByReserveUsd), arg0, arg1, arg2, arg3, arg4, arg5, arg6)
}
